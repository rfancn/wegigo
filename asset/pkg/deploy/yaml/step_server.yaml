html:
  - panel: panel-style="info"
    header: "Servers Information"
    fieldset:
      - table: id="table-servers" class="table table-striped table-bordered table-hover"
        thead: ["Host", "Port", "Username", "Password", "Master Node", "Worker Node"]
    footer:
      - button: text="Add" data-toggle="modal" data-target="#modal-server" data-action="Add"
      - button: text="Edit" data-toggle="modal" data-target="#modal-server" data-action="Edit"
      - button: id="btn-delete" text="Delete"

javascript:
  - inline: |
      var tableServers = $('#table-servers').DataTable({
          // hide pagination length toolbox
          lengthChange: false,
          select: true,
          // if not set autoWidth, then 'width' doesn't work
          autoWidth: false,
          columns: [
            { data: 'host', width: "30%"},
            { data: 'port', width: '5%'},
            { data: 'username'},
            { data: 'password', render: function(data, type, row){
                return '******';
            }},
            { data: null, width: '15%', render: function(data, type, row){
                return role_check_status('master', data.roles);
            }},
            {data: null, width: '15%', render: function(data, type, row){
                return role_check_status('worker', data.roles);
            }},
          ],
      });

      function leaveStep2(stepDirection) {
        console.log("leave step3 step_server");
        if(stepDirection === "forward"){
             if (tableServers.rows().data().length <1){
                 alertify.alert("You must input at least one node!");
                 return false;
             }
        }

        return true;
      }

      function showStep2(stepDirection) {
        console.log("show step3 step_server");
        //set the edit server host to be vueWechat.host by default
        if($.trim(vueServer.host).length === 0){
          vueServer.host = vueWechat.host;
        }
        return true;
      }

      function role_check_status(role_name, roles){
        var str_checked = ' checked ';
        if($.inArray(role_name, roles) == -1){
            str_checked = '';
        }
        return '<input type="checkbox" class="checkbox"' + str_checked + 'disabled/>';
      };

      //tableServers.on('click', 'tr', function (){
      //  console.log(tableServers.row( this ).data());
      //});

      $('#btn-delete').on( 'click', function(){
          var row_selected = tableServers.rows({selected: true});
          var selected_row_count = row_selected.count();
          var confirm_msg = 'Are you sure you want delete '+ selected_row_count + ' rows?';
          if(selected_row_count > 0){
            alertify.confirm(confirm_msg, function(){
              row_selected.remove().draw();
            });
          };
      });



